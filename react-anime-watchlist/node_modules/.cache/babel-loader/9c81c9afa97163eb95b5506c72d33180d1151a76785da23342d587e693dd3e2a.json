{"ast":null,"code":"var _jsxFileName = \"/Users/keyonnagarfine/Desktop/MCSP18/React/react-mvp-frontend/react-anime-watchlist/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Navbar from './components/navbar';\nimport AnimeCard from './components/animeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_url = 'https://anime-watchlist-app-server.onrender.com';\nfunction App() {\n  _s();\n  const [animeList, setAnimeList] = useState([]);\n  const [watchList, setWatchList] = useState([]);\n  const getRandomAnimeData = async () => {\n    const response = await fetch(`${api_url}/getRandomAnime`);\n    const data = await response.json();\n    setAnimeList(data);\n  };\n  useEffect(() => {\n    getRandomAnimeData();\n  }, []);\n  const getWatchListAnimeData = async () => {\n    const response = await fetch(`${api_url}/watchlist`);\n    const data = await response.json();\n    setWatchList(data);\n  };\n  useEffect(() => {\n    getWatchListAnimeData();\n  }, []);\n  const handleAddToWatchList = async anime => {\n    const {\n      title,\n      image_url,\n      airing,\n      synopsis,\n      episodes,\n      score\n    } = anime;\n    const review = '';\n    const insertQuery = `\n\t\t\tINSERT INTO watchlist (title, image_url, airing, synopsis, episodes, score, review)\n\t\t\tVALUES ($1, $2, $3, $4, $5, $6, $7)\n\t\t\tRETURNING *;\n\t\t`;\n    try {\n      const response = await fetch(api_url + '/watchlist', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          image_url,\n          airing,\n          synopsis,\n          episodes,\n          score,\n          review\n        })\n      });\n      const data = await response.json();\n      setWatchList(prevWatchList => [...prevWatchList, data]);\n    } catch (error) {\n      console.error(`Error adding to watchlist: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-1 row-cols-md-3 g-4\",\n        children: animeList.map(anime => /*#__PURE__*/_jsxDEV(AnimeCard, {\n          anime: anime,\n          handleAddToWatchList: handleAddToWatchList\n        }, anime.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"5s1FnDVZcFdwPTEDnhOEAf3Al50=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Navbar","AnimeCard","jsxDEV","_jsxDEV","api_url","App","_s","animeList","setAnimeList","watchList","setWatchList","getRandomAnimeData","response","fetch","data","json","getWatchListAnimeData","handleAddToWatchList","anime","title","image_url","airing","synopsis","episodes","score","review","insertQuery","method","headers","body","JSON","stringify","prevWatchList","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_c","$RefreshReg$"],"sources":["/Users/keyonnagarfine/Desktop/MCSP18/React/react-mvp-frontend/react-anime-watchlist/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Navbar from './components/navbar';\nimport AnimeCard from './components/animeCard';\n\nconst api_url = 'https://anime-watchlist-app-server.onrender.com';\n\nfunction App() {\n\tconst [animeList, setAnimeList] = useState([]);\n\tconst [watchList, setWatchList] = useState([]);\n\n\tconst getRandomAnimeData = async () => {\n\t\tconst response = await fetch(`${api_url}/getRandomAnime`);\n\t\tconst data = await response.json();\n\t\tsetAnimeList(data);\n\t};\n\n\tuseEffect(() => {\n\t\tgetRandomAnimeData();\n\t}, []);\n\n\tconst getWatchListAnimeData = async () => {\n\t\tconst response = await fetch(`${api_url}/watchlist`);\n\t\tconst data = await response.json();\n\t\tsetWatchList(data);\n\t};\n\n\tuseEffect(() => {\n\t\tgetWatchListAnimeData();\n\t}, []);\n\n\tconst handleAddToWatchList = async (anime) => {\n\t\tconst { title, image_url, airing, synopsis, episodes, score } = anime;\n\t\tconst review = '';\n\t\tconst insertQuery = `\n\t\t\tINSERT INTO watchlist (title, image_url, airing, synopsis, episodes, score, review)\n\t\t\tVALUES ($1, $2, $3, $4, $5, $6, $7)\n\t\t\tRETURNING *;\n\t\t`;\n\t\ttry {\n\t\t\tconst response = await fetch(api_url + '/watchlist', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\ttitle,\n\t\t\t\t\timage_url,\n\t\t\t\t\tairing,\n\t\t\t\t\tsynopsis,\n\t\t\t\t\tepisodes,\n\t\t\t\t\tscore,\n\t\t\t\t\treview,\n\t\t\t\t}),\n\t\t\t});\n\t\t\tconst data = await response.json();\n\t\t\tsetWatchList((prevWatchList) => [...prevWatchList, data]);\n\t\t} catch (error) {\n\t\t\tconsole.error(`Error adding to watchlist: ${error.message}`);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar />\n\t\t\t<div className='container mt-4'>\n\t\t\t\t<div className='row row-cols-1 row-cols-md-3 g-4'>\n\t\t\t\t\t{animeList.map((anime) => (\n\t\t\t\t\t\t<AnimeCard\n\t\t\t\t\t\t\tkey={anime.title}\n\t\t\t\t\t\t\tanime={anime}\n\t\t\t\t\t\t\thandleAddToWatchList={handleAddToWatchList}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}